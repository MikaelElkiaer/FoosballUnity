// <auto-generated />
using System;
using FoosballUnity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoosballUnity.Data.Sqlite.Migrations
{
    [DbContext(typeof(FoosballContext))]
    partial class FoosballContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("FoosballUnity.Model.ConfigurationItem", b =>
                {
                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("Name");

                    b.ToTable("ConfigurationItem");
                });

            modelBuilder.Entity("FoosballUnity.Model.Game", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastUpdatedUtc");

                    b.Property<string>("MatchWinner");

                    b.Property<string>("PlayerBlue1");

                    b.Property<string>("PlayerBlue2");

                    b.Property<string>("PlayerRed1");

                    b.Property<string>("PlayerRed2");

                    b.Property<int>("PointsAtStake");

                    b.Property<int>("WinningTable");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("FoosballUnity.Model.Player", b =>
                {
                    b.Property<string>("Id");

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<bool>("PlayerReady");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
